GET /
GET /api/
    The default home endpoint of the api
    Returns a json with brief dinning hall data

    No request body needed

    Success Response
        <HTTP Status code 200>
        {
            "dining halls": [
                {
                   "id": <int>,
                   "name": <string>,
                   "rating": <number in range [0,5] inclusive in steps of 0.5>,
                   "image": <url to image>,
                   "review_number": <int>
                }
            ]
        }

GET /api/hall/{id}/
    Returns data about a specific dining hall

    No request body needed

    Success Response
        <HTTP Status code 200>
        {
            "id": <int>,
            "name" : <string>,
            "rating": <number in range [0,5] inclusive in steps of 0.5>,
            "image": <url to image>,
            "reviews": [
                {
                    <reviews data>
                }
            ]
        }
    
    Failure Response
        <HTTP Status code 404>
        {
            "error" : "Hall not found"
        }


GET /api/hall/{hall id}/reviews/{review id}/
    Returns data about a specific review on a dining hall

    No request body needed

    Success Response
        <HTTP Status code 200>
        {
            "id": <int>
            "hall_id": <int>
            "username" : <string>
            "userid": <int>
            "date": <unix time>
            "contents": <string>
            "with_image": <boolean>
            "image_url": <url to image> | <"">
        }

    Failure Response
        <HTTP Status code 404>
            "error": "Dining hall not found"
        

        <HTTP status code 404>
            "error": "Review not found"


POST /api/hall/{hall id}/reviews/
    Create a review on a dining hall
    Authentication required!

    Request header 
        Authentication: Bearer <valid token>
    
    Request body
        {
            "userid": <valid user id>
            "contents" : <string>
            "with_image" : <boolean>
            "image_url" : <url to image> | <null>
        }
    
    Success Response 
        <HTTP Status code 201>
        {
            "id": <int>
            "hall_id": <int>
            "username" : <string>
            "userid": <int>
            "contents": <string>
            "date": <unix time>
            "with_image": <boolean>
            "image_url": <url to image> | <null>
        }

    Failure Responses
        <HTTP Status code 404>
        "error": 
            "Hall not found"
            "User not found"

        <HTTP Status code 400>
        "error": 
            "Bad request body"
            "Missing Authentication"
            "Missing session token"
        
        <HTTP Status code 401>
        "error":
            "Invalid session token"


DELETE /api/hall/{hall id}/reviews/{ review id}/
    Delete a specific review on a dining hall. Reviews can only be
    deleted by their creator.
    
    Requires Authentication

    Request header
        Authentication: Bearer <valid token>
    
    Success Response 
        <HTTP Status code 200>
        {
            "id": <int>
            "hall_id": <int>
            "username" : <string>
            "userid": <int>
            "contents": <string>
            "with_image": <boolean>
            "date": <unix time>
            "image_url": <url to image> | <null>
        }
    
    Failure Responses
        <HTTP Status code 404>
        "error": 
            "Review not found"
            "Dining hall not found"

        <HTTP Status code 400>
        "error": 
            "Missing Authorization"
            "Missing session token"
        
        <HTTP Status code 401>
        "error":
            "Invalid session token"
            "Unauthorized access"


PATCH /api/hall/{hall id}/reviews/{review id}/
    Modify the contents of a review

    Requires Authentication

    Request header
        Authentication: Bearer <valid token>
    
    Request body
        {
            "contents": <string>
        }
    
    Success Response
        <HTTP Status code 200>
        {
            "id": <int>
            "hall_id": <int>
            "username" : <string>
            "userid": <int>
            "date": <unix time>
            "contents": <string>
            "with_image": <boolean>
            "image_url": <url to image> | <null>
        }

    Failure Responses
        <HTTP Status code 404>
        "error": 
            "Review not found"
            "Dining hall not found"

        <HTTP Status code 400>
        "error":
            "Missing request body"
            "Bad request body"
            "Missing Authorization"
            "Missing session token"
        
        <HTTP Status code 401>
        "error":
            "Invalid session token"
            "Unauthorized access"


POST /api/hall/{hall id}/rate/
    Rate a dining hall out of 5. Ratings in range
    [0,5] inclusive with steps of 0.5 allowed

    Requires Authentication

    Request header
        Authentication: Bearer <valid token>
    
    Request body
        {
            "userid" <int>
            "rating": <number in range [0,5] inclusive>
        }
    
    Success Response
        <HTTP Status code 201>
        {
            "id": <int>,
            "name": <string>,
            "rating": <number in range [0,5] inclusive in steps of 0.5>,
            "image": <url to image>,
            "review_number": <int>
        }

    Failure Response
        <HTTP Status code 404>
        "error":
            "Dining hall not found"
            "User not found"

        <HTTP Status code 400>
        "error":
            "Missing request body"
            "Bad request body"
            "Missing Authorization"
            "Missing session token"

        <HTTP Status code 401>
        "error":
            "Invalid session token"


POST /api/login/
    Attempts to login a user.
    Requires password to be salted and hashed

    Request body
        {
            "email": <email>
            "password": <salted and hashed password>
        }
    
    Success Response
        <HTTP Status code 201>
        {
            "userid": <int>
            "username": <string>
            "email": <email>
            "tokenid": <int>
            "session_token": <valid session token>
            "created_at": <unix time>
            "expires_at": <unix time>
        }
    
    Failure Response
        <HTTP Status code 404>
        "error":
            "User not found"
        
        <HTTP Status code 400>
        "error":
            "Missing request body"
            "Bad request body"
        
        <HTTP Status code 401>
        "error":
            "Incorrect password"


POST /api/signup/
    Create a new user
    Requires cornell email
    Requires no existing user with same email
    Requires password is plaintext

    Request body 
        {
            "email": <Valid cornell email>
            "password": <plaintext password>
            "username": <string>
        }

    Success Response
        <HTTP Status code 201>
        {
            "userid": <int>
            "username": <string>
            "email": <email>
            "tokenid": <int>
            "session_token": <valid session token>
            "created_at": <unix time>
            "expires_at": <unix time>
        }

    Failure Response
        <HTTP Status code 400>
        "error":
            "User already exists"
            "Missing request body"
            "Bad request body"
        
        <HTTP Status code 403>
        "error":
            "Only Cornell accounts allowed"


POST /api/experimental/login/
    Attempts to login a user using Google Authentication.
    Requires a Cornell email

    Request body
        {
            "email": <valid cornell email>
        }
    
    Success Response
        <HTTP Status code 201>
        {
            "userid": <int>
            "username": <string>
            "email": <email>
            "tokenid": <int>
            "session_token": <valid session token>
            "created_at": <unix time>
            "expires_at": <unix time>
        }

    Failure Response
        <HTTP Status code 404>
        "error":
            "User not found"
        
        <HTTP Status code 400>
        "error":
            "Missing request body"
            "Bad request body"
        
        <HTTP Status code 401>
        "error":
            "Incorrect password"

        <HTTP Status code 403>
        "error":
            "Only Cornell accounts allowed"